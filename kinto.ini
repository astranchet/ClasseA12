[app:main]
use = egg:kinto

pyramid.debug_notfound = false

#
# Features
#
# kinto.readonly = false
# kinto.paginate_by = 0
kinto.experimental_collection_schema_validation = true
kinto.experimental_permissions_endpoint = true
kinto.trailing_slash_redirect_enabled = true
# kinto.batch_max_requests = 25
# kinto.flush_endpoint_enabled = false
# kinto.version_json_path = ./version.json

kinto.http_scheme = https
kinto.http_host = kinto.classea12.beta.gouv.fr

#
# Backends.
#
kinto.cache_backend = kinto.core.cache.postgresql
kinto.cache_url = postgres://<user>:<password>@<host>/<db name>

kinto.storage_backend = kinto.core.storage.postgresql
kinto.storage_url = postgres://<user>:<password>@<host>/<db name>

kinto.permission_backend = kinto.core.permission.postgresql
kinto.permission_url = postgres://<user>:<password>@<host>/<db name>

# kinto.backoff = 10
# kinto.retry_after_seconds = 30
# kinto.eos =

#
# Auth configuration.
#
kinto.userid_hmac_secret = <some secret>

# Put your user id there instead to only allow the admin to create buckets.
# kinto.bucket_create_principals = system.Authenticated
kinto.bucket_create_principals = account:<admin user name>
kinto.bucket_write_principals = account:<admin user name>
kinto.bucket_read_principals = account:<admin user name>

kinto.collection_create_principals = account:<admin user name>
kinto.collection_write_principals = account:<admin user name>
kinto.collection_read_principals = account:<admin user name>

kinto.group_create_principals = account:<admin user name>
kinto.group_write_principals = account:<admin user name>
kinto.group_read_principals = account:<admin user name>

kinto.record_create_principals = account:<admin user name>
kinto.record_write_principals = account:<admin user name>
kinto.record_read_principals = account:<admin user name>

# Accounts
kinto.account_create_principals = system.Everyone
kinto.account_write_principals = account:<admin user name>
kinto.account_read_principals = account:<admin user name>

multiauth.policies = account basicauth
multiauth.policy.account.use = kinto.plugins.accounts.AccountsPolicy
multiauth.policy.basicauth.use = kinto.core.authentication.BasicAuthAuthenticationPolicy

kinto.includes = kinto.plugins.default_bucket
                 kinto.plugins.admin
                 kinto.plugins.history
                 kinto_attachment
                 kinto.plugins.accounts

# Account validation
kinto.account_validation = true
# Mail host configuration:
mail.host = <smtp host>
mail.port = 25
mail.username = <smtp username>
mail.password = <smtp password>
# Mail configuration:
kinto.account_validation.email_sender = "contact@classea12.beta.gouv.fr"
kinto.account_validation.email_subject_template = "Activation de votre compte sur Classe Ã  12"
kinto.account_validation.email_body_template = "Bonjour,\n\nVous pouvez activer votre compte en suivant ce lien :\nhttps://classea12.beta.gouv.fr/activation/{id}/{activation-key}"


# Kinto attachment
kinto.attachment.base_url = https://videos.classea12.beta.gouv.fr/
kinto.attachment.folder = {bucket_id}/{collection_id}
kinto.attachment.base_path = /<path to>/kinto/attachments
kinto.attachment.keep_old_files = true
kinto.attachment.extensions = default+video+mov

[loggers]
keys = root

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = DEBUG
handlers = console

[handler_console]
class = StreamHandler
args = (sys.stdout,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s
datefmt = %H:%M:%S

# End logging configuration
